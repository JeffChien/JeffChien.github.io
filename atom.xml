<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[JChien's Blog]]></title>
  <link href="http://JeffChien.github.io/atom.xml" rel="self"/>
  <link href="http://JeffChien.github.io/"/>
  <updated>2013-12-01T01:12:30+08:00</updated>
  <id>http://JeffChien.github.io/</id>
  <author>
    <name><![CDATA[JChien]]></name>
    <email><![CDATA[jeffchien13@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[multi-dimentional list in python]]></title>
    <link href="http://JeffChien.github.io/blog/2013/12/01/multi-dimentional-list-in-python/"/>
    <updated>2013-12-01T00:15:00+08:00</updated>
    <id>http://JeffChien.github.io/blog/2013/12/01/multi-dimentional-list-in-python</id>
    <content type="html"><![CDATA[<p>Multi-dimentional list syntax in python is not as simple as I thought like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">MyList</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">*</span> <span class="p">[</span> <span class="mi">3</span> <span class="o">*</span> <span class="p">[</span> <span class="mi">3</span> <span class="o">*</span> <span class="p">[</span><span class="mi">0</span><span class="p">]]]</span>
</span></code></pre></td></tr></table></div></figure>


<p>and then, try to modify a value in it, <code>MyList[0][0][0] = 1</code>, you will see there will be <code>9</code> items with value 1,
this is not we expecte a normal multi-dimentional list should do.</p>

<p>the problem is python instead of create a new instance of list, it copy the <code>Reference</code> of it.  I misused it, and bugged me for a while, after digging on the net, came up with 3 different ways.</p>

<h3>comprehension</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">MyList</span> <span class="o">=</span> <span class="p">[[[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">)]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">)]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'><span class="c">#operate</span>
</span><span class='line'><span class="n">MyList</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<h3>simulate with dict</h3>

<p>with <code>collection.defaultdict</code> help</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">collections</span> <span class="nn">improt</span> <span class="nn">defaultdict</span>
</span><span class='line'>
</span><span class='line'><span class="n">MyList</span> <span class="o">=</span> <span class="n">defaultdict</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#operate</span>
</span><span class='line'><span class="n">MyList</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="n">MyList</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Good&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>this give us a very similar syntax provided by NumPy</p>

<h3>use NumPy array</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="n">MyList</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c">#operate</span>
</span><span class='line'><span class="n">MyList</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>this way unlike the other two above, only numbers is allowed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[scripting alternative to bash]]></title>
    <link href="http://JeffChien.github.io/blog/2013/10/25/scripting-alternative-to-bash/"/>
    <updated>2013-10-25T23:42:00+08:00</updated>
    <id>http://JeffChien.github.io/blog/2013/10/25/scripting-alternative-to-bash</id>
    <content type="html"><![CDATA[<p>I really don&rsquo;t like to write bash script. I prefer use python as my shell language, but I have to admit that
in some cases, bash script can be simpler than python.</p>

<p>I found the discussion <a href="http://stackoverflow.com/questions/10239235/are-there-any-languages-that-compile-to-bash">Are there any languages that compile to Bash?</a></p>

<p>someone mention <a href="http://plumbum.readthedocs.org/en/latest/index.html">Plumbum</a> for python and <a href="https://github.com/arturadib/shelljs">ShellJS</a> for nodejs both
reimplement some unix tools. I tried both, here&rsquo;s what I learned.</p>

<ul>
<li><p>Plumbum: overriding many python operator <code>| &lt; &gt;</code> &hellip;etc. give these operator new meaning such that <code>&gt; or &lt;</code> for redirect.</p></li>
<li><p>ShellJS: javascript syntax not as simple as python, but there are <code>coffee script</code>/<code>livescript</code> which provide much elegant syntax,
  make this library worth using.</p></li>
</ul>


<p>there is a third option: <code>ipython</code>, after I read the book</p>

<p><img src="http://it-ebooks.info/images/ebooks/3/python_for_unix_and_linux_system_administration.jpg" alt="Python for Unix and Linux System Administration" /></p>

<p><code>ipython</code> is really amazing, I use it as my default pytohn REPL, this book give me lot&rsquo;s of way to write a bash like script in python way,
oh&hellip; not exactly pure python, ipython invent some of it&rsquo;s own syntax.</p>

<p>here are some example</p>

<ul>
<li><code>!ls</code>: execute ls</li>
<li><code>!ls | grep config</code>: ls with filter</li>
<li><code>%rehash</code>: hash command in PATH. make unix command can be use inside ipython REPL.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">(</span><span class="n">ipython</span><span class="p">)</span> <span class="n">user</span> <span class="o">=</span> <span class="s">&#39;root&#39;</span>
</span><span class='line'><span class="p">(</span><span class="n">ipython</span><span class="p">)</span> <span class="n">process</span> <span class="o">=</span> <span class="s">&#39;bash&#39;</span>
</span><span class='line'><span class="p">(</span><span class="n">ipython</span><span class="p">)</span> <span class="n">listofitem</span> <span class="o">=</span> <span class="err">!</span><span class="n">ps</span> <span class="n">aux</span> <span class="o">|</span> <span class="n">grep</span> <span class="err">$</span><span class="n">user</span> <span class="o">|</span> <span class="n">grep</span> <span class="err">$</span><span class="n">process</span>
</span></code></pre></td></tr></table></div></figure>


<p>script can be store in <code>*.ipy</code> for future use.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sudo hangs]]></title>
    <link href="http://JeffChien.github.io/blog/2013/10/25/sudo-hangs/"/>
    <updated>2013-10-25T20:24:00+08:00</updated>
    <id>http://JeffChien.github.io/blog/2013/10/25/sudo-hangs</id>
    <content type="html"><![CDATA[<h1>Problem description.</h1>

<p>one day during work, I encountered this problem, every time I <code>sudo</code> a command,
it took awhile to prompt from password.</p>

<h1>how to fix it</h1>

<p>I recalled that one of my colleague share how he use <code>strace</code> to debug a application.
I decided to give it a shot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>strace -Tvxfo trace.log sudo ls
</span></code></pre></td></tr></table></div></figure>


<p>the log file is very large, these lines tells what cause the problem</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>0.000093 socket<span class="o">(</span>PF_INET, SOCK_DGRAM|SOCK_NONBLOCK, IPPROTO_IP<span class="o">)</span> <span class="o">=</span> 6 &lt;0.000014&gt;
</span><span class='line'>0.000042 connect<span class="o">(</span>6, <span class="o">{</span><span class="nv">sa_family</span><span class="o">=</span>AF_INET, <span class="nv">sin_port</span><span class="o">=</span>htons<span class="o">(</span>53<span class="o">)</span>, <span class="nv">sin_addr</span><span class="o">=</span>inet_addr<span class="o">(</span><span class="s2">&quot;127.0.0.1&quot;</span><span class="o">)}</span>, 16<span class="o">)</span> <span class="o">=</span> 0 &lt;0.000
</span><span class='line'>0.000051 poll<span class="o">([{</span><span class="nv">fd</span><span class="o">=</span>6, <span class="nv">events</span><span class="o">=</span>POLLOUT<span class="o">}]</span>, 1, 0<span class="o">)</span> <span class="o">=</span> 1 <span class="o">([{</span><span class="nv">fd</span><span class="o">=</span>6, <span class="nv">revents</span><span class="o">=</span>POLLOUT<span class="o">}])</span> &lt;0.000009&gt;
</span><span class='line'>0.000043 sendto<span class="o">(</span>6, <span class="err">&quot;</span><span class="se">\x</span>02<span class="se">\x</span>d8<span class="se">\x</span>01<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>01<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>00<span class="se">\x</span>08<span class="se">\x</span>4a<span class="se">\x</span>43<span class="se">\x</span>75<span class="se">\x</span>62<span class="se">\x</span>75<span class="se">\x</span>6e<span class="se">\x</span>74<span class="se">\x</span>75<span class="se">\x</span>00
</span><span class='line'>0.000066 poll<span class="o">([{</span><span class="nv">fd</span><span class="o">=</span>6, <span class="nv">events</span><span class="o">=</span>POLLIN<span class="o">}]</span>, 1, 5000<span class="o">)</span> <span class="o">=</span> 0 <span class="o">(</span>Timeout<span class="o">)</span> &lt;5.005021&gt;
</span><span class='line'>5.005098 poll<span class="o">([{</span><span class="nv">fd</span><span class="o">=</span>6, <span class="nv">events</span><span class="o">=</span>POLLOUT<span class="o">}]</span>, 1, 0<span class="o">)</span> <span class="o">=</span> 1 <span class="o">([{</span><span class="nv">fd</span><span class="o">=</span>6, <span class="nv">revents</span><span class="o">=</span>POLLOUT<span class="o">}])</span> &lt;0.000008&gt;
</span></code></pre></td></tr></table></div></figure>


<p>I changed the hostname in <code>/etc/hostname</code> day before. Line 4 say that it want to send somthing to <code>JCubuntu</code> (which is my new hostname),
but it couldn&rsquo;t, so time out occurred.</p>

<p>the solution is adding a new line to the <code>/etc/hosts</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>127.0.0.1  newhostname
</span></code></pre></td></tr></table></div></figure>


<p>the problem will disappear</p>
]]></content>
  </entry>
  
</feed>
